---
- name: Install Realtek r8126 Driver via DKMS (Git/Script Method)
  hosts: proxmox_hosts
  become: true
  gather_facts: true

  vars:
    repo_url: "https://github.com/awesometic/realtek-r8126-dkms.git"
    repo_dest: "/usr/local/src/realtek-r8126-dkms"
    dkms_module_name: "r8126"
    conflicting_module: "r8169"

  tasks:
    - name: Check if DKMS module is already installed
      ansible.builtin.shell:
        cmd: "dkms status | grep {{ dkms_module_name }}"
      register: dkms_check
      changed_when: false
      failed_when: false

    - name: Block for driver installation
      when: dkms_check.rc != 0
      block:
        - name: Install build prerequisites (dkms, git, headers)
          ansible.builtin.apt:
            name:
              - dkms
              - git
              - build-essential
              - pve-headers
            state: present
            update_cache: true
          notify: Reboot Host

        - name: Force handler run to reboot if necessary before proceeding
          ansible.builtin.meta: flush_handlers

        - name: Clone the driver repository from GitHub
          ansible.builtin.git:
            repo: "{{ repo_url }}"
            dest: "{{ repo_dest }}"
            version: HEAD
          notify: Cleanup git repo

        - name: Run the DKMS installation script
          ansible.builtin.command:
            cmd: ./dkms-install.sh
            chdir: "{{ repo_dest }}"
          register: install_script
          changed_when: "'already installed' not in install_script.stdout"

    - name: Blacklist the conflicting r8169 module
      ansible.builtin.copy:
        dest: "/etc/modprobe.d/blacklist-{{ conflicting_module }}.conf"
        content: |
          # To ensure the dkms r8126 driver is used instead of the default
          blacklist {{ conflicting_module }}
        owner: root
        group: root
        mode: "0644"
      notify:
        - Update initramfs
        - Advise Final Reboot

    - name: Print a success message
      ansible.builtin.debug:
        msg: "DKMS driver '{{ dkms_module_name }}' was successfully installed."
      when: dkms_check.rc != 0

    - name: Print a message if driver was already present
      ansible.builtin.debug:
        msg: "DKMS driver '{{ dkms_module_name }}' was already installed. No action taken."
      when: dkms_check.rc == 0

  handlers:
    - name: Reboot Host
      listen: "Reboot Host"
      ansible.builtin.reboot:
        msg: "Rebooting to activate new kernel/headers before DKMS build..."
        reboot_timeout: 360

    - name: Update initramfs
      listen: "Update initramfs"
      ansible.builtin.command:
        cmd: update-initramfs -u
      changed_when: false

    - name: Cleanup git repo
      listen: "Cleanup git repo"
      ansible.builtin.file:
        path: "{{ repo_dest }}"
        state: absent
      # NOTE: This will delete the source code after installation.
      # Comment this handler out if you wish to keep the source.

    - name: Advise Final Reboot
      listen: "Advise Final Reboot"
      ansible.builtin.debug:
        msg: |
          A module was blacklisted. A final reboot is required for this
          change to take full effect. Please reboot the host at your
          earliest convenience.
