---
- name: Update AMD Microcode to the Absolute Latest
  hosts: proxmox_hosts
  become: true
  vars:
    amd_microcode_repo_url: "https://ftp.debian.org/debian/pool/non-free-firmware/a/amd64-microcode/"
    download_path: "/tmp"

  tasks:
    - name: Ensure prerequisite packages are installed
      ansible.builtin.apt:
        name: [curl, grep, sed]
        state: present
        update_cache: true

    - name: Find the latest AMD microcode .deb package name
      ansible.builtin.shell:
        # Using a YAML block scalar '>' is cleaner and avoids quoting issues.
        # The grep regex is now corrected to '[^"]*' to allow underscores.
        cmd: >
          curl -sSL {{ amd_microcode_repo_url }} |
          grep -o 'href="[^"]*_amd64\.deb"' |
          sed 's/href="//;s/"//' |
          sort -V |
          tail -n 1
      register: latest_package_info
      changed_when: false

    - name: Store latest package name as a fact
      ansible.builtin.set_fact:
        latest_package_name: "{{ latest_package_info.stdout }}"

    - name: Check the currently installed version of amd64-microcode
      ansible.builtin.command: "dpkg-query -W -f='${Version}' amd64-microcode"
      register: current_version_info
      changed_when: false
      failed_when: false

    - name: Display findings
      ansible.builtin.debug:
        msg: "Latest available version is '{{ latest_package_name }}'. Currently installed is '{{ current_version_info.stdout | default('Not Installed') }}'."

    # --- This block only runs if an update is needed ---
    - name: Download and install the latest microcode if necessary
      block:
        - name: Download the latest .deb package
          ansible.builtin.get_url:
            url: "{{ amd_microcode_repo_url }}/{{ latest_package_name }}"
            dest: "{{ download_path }}/{{ latest_package_name }}"
            mode: "0644"

        - name: Install the .deb package using apt
          ansible.builtin.apt:
            deb: "{{ download_path }}/{{ latest_package_name }}"
          notify: Reboot Host

      # This condition also prevents running if the package name is empty
      when: latest_package_name | length > 0 and latest_package_name not in current_version_info.stdout

    - name: Clean up the downloaded .deb file
      ansible.builtin.file:
        path: "{{ download_path }}/{{ latest_package_name }}"
        state: absent
      when: latest_package_name | length > 0 and latest_package_name not in current_version_info.stdout

  # --- This handler is only triggered by the 'notify' keyword ---
  handlers:
    - name: Reboot Host
      listen: "Reboot Host"
      ansible.builtin.reboot:
        msg: "Rebooting to apply microcode update..."
        reboot_timeout: 300
