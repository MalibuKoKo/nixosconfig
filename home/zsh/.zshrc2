#this is the nix bindkey for up and down. from https://nixos.wiki/wiki/Zsh
#actually this took forever for me to work out. Even though cat -v shows the up arrow as
#[[A its not? its [OA. This took me two hours to debug. Great.
bindkey "'${key[Up]}" up-line-or-search
bindkey "^[OA" up-line-or-search
bindkey "^[[A" up-line-or-search

bindkey "^[OB" down-line-or-select
bindkey "^[[B" down-line-or-select

# Bind 'tab tab' to accept the auto suggest. All time most used key binding.
bindkey '^I^I' autosuggest-accept

# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

alias nosleep='sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target'

alias gosleep='sudo systemctl unmask sleep.target suspend.target hibernate.target hybrid-sleep.target && sudo systemctl suspend && exit'

alias gohibe='sudo systemctl unmask hibernate.target && sudo systemctl hibernate && exit'

alias cr='cargo run'

alias  epi!="wakeonlan       18:c0:4d:65:86:e8 "


# export PYENV_ROOT="$HOME/.pyenv"
# [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init -)"

# Function to quickly push our dotfile changes
function push_dotfiles() {
    cd ~/nixosconfig/ || return
    echo "Enter commit message: "
    read commit_message
    git add --all
    git commit -m "$commit_message"
    git push origin
}

# Similar function to easily pull remote changes
function pull_dotfiles() {
    cd ~/nixosconfig || return
    git pull origin
    # If there's a merge conflict or other error, exit the function
  if [ $? -ne 0 ]; then
    echo "Error: Git pull failed. Please resolve conflicts."
    return 1
  fi
}


#thisisatest

function edit() {
  case $1 in
    zsh)
      nvim ~/nixosconfig/home/zsh/.zshrc2
      ;;
    caddy)
      nvim ~/DotFiles/Caddy/Caddyfile 
      ;;
     diary)
      cd /mnt/data/Life/Zet/Projects/Diary && nvim
     ;;
   cullen)
     cd /mnt/data/Life/Zet/Cullen && nvim
     ;;
   nvim)
     nvim ~/nixosconfig/home/nvim/options.lua
     ;;
   nix)
     cd ~/nixosconfig/ && nvim
     ;;
    *)
      echo "Unknown argument: $1"
      ;;
  esac
}

# This function is now superseded as we are in Nix Land everywhere.
# function reload() {
#   case $1 in
#     caddy)
#       sudo systemctl restart caddy
#       ;;
#     zsh)
#       exec zsh
#       ;;
#     home)
#       cd ~/nixosconfig/ && home-manager switch --flake .#${USER}
#       ;;
#     nix)
#       cd ~/nixosconfig/ &&  sudo nixos-rebuild switch --flake .#${USER}
#       ;;
#     *)
#       echo "Unknown argument: $1"
#       ;;
#    esac
# }

#nvim ftw
alias v='nvim'

#make ls pretty and show those pesky .files.
alias ls='ls -A -F -l --group-directories-first --color=always'

reload() {
  HOST=$1
  TARGET=$2

  # Run the pull_dotfiles function and exit if it fails
  pull_dotfiles || return

  # Update flake
  nix flake update

  if [[ "$TARGET" == "home" ]]; then
    # Only run Home Manager switch
    home-manager switch --flake .#${HOST}
    exec zsh
  else
    # Rebuild NixOS with sudo and then Home Manager switch
    sudo nixos-rebuild switch --flake .#${HOST}
    home-manager switch --flake .#${HOST}
    exec zsh
  fi
}

# The alias saves our gnome config declaratively using dconf2nix
# the two sed commands are to remove the trailing newline and comment out the animation 
# this seems to be a bug in dconf2nix
# this one was a real doozy to debug. I'm not sure if it's a bug or not.
save_gnome() { 
    cd ~/nixosconfig/home/display_managers || return
    rm -f dconf.nix
    dconf dump / | dconf2nix > dconf.nix 
    sed -i "/animate-appicon-hover-animation-extent = {/,/};/ s/^/#/" dconf.nix 
    sed -i '/panel-anchors\|panel-element-positions\|panel-sizes/ {N;s/\\n//g}' dconf.nix
    sed -i '/panel-lengths/ {N;s/\\n[[:space:]]*//g}' dconf.nix
    sed -i '/toggle-state\|user-enabled/ s/^\([^#]*\)$/#\1/' dconf.nix
}

echo "did this work"


