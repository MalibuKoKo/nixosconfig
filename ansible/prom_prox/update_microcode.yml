---
- name: Update AMD Microcode to the Absolute Latest
  hosts: proxmox_hosts # Or whatever you call your host/group in your inventory
  become: true # We need root privileges to install packages
  vars:
    amd_microcode_repo_url: "https://ftp.debian.org/debian/pool/non-free-firmware/a/amd64-microcode/"
    download_path: "/tmp"

  tasks:
    - name: Ensure prerequisite packages are installed
      ansible.builtin.apt:
        name:
          - curl
          - grep
          - sed
        state: present
        update_cache: true

    - name: Find the latest AMD microcode .deb package name
      # This command scrapes the debian repo page, extracts all .deb filenames,
      # version-sorts them, and grabs the last one (the newest).
      ansible.builtin.shell:
        cmd: 'curl -sSL {{ amd_microcode_repo_url }} | grep -o ''href="[^"_]*amd64.deb"'' | sed ''s/href="//;s/"//'' | sort -V | tail -n 1'
      register: latest_package_info
      changed_when: false

    - name: Store latest package name as a fact
      ansible.builtin.set_fact:
        latest_package_name: "{{ latest_package_info.stdout }}"

    - name: Check the currently installed version of amd64-microcode
      # We use 'command' and 'failed_when: false' to prevent an error if the package isn't installed at all.
      ansible.builtin.command: "dpkg-query -W -f='${Version}' amd64-microcode"
      register: current_version_info
      changed_when: false
      failed_when: false # Important! Don't fail if package is not installed.

    - name: Display findings
      ansible.builtin.debug:
        msg: "Latest available version is {{ latest_package_name }}. Currently installed is '{{ current_version_info.stdout | default('Not Installed') }}'."

    # --- This block only runs if an update is needed ---
    - name: Download and install the latest microcode if necessary
      block:
        - name: Download the latest .deb package
          ansible.builtin.get_url:
            url: "{{ amd_microcode_repo_url }}/{{ latest_package_name }}"
            dest: "{{ download_path }}/{{ latest_package_name }}"
            mode: "0644"

        - name: Install the .deb package using apt
          # Using the apt module is better than dpkg as it can handle dependencies if there were any.
          ansible.builtin.apt:
            deb: "{{ download_path }}/{{ latest_package_name }}"
          notify: Reboot Host # This tells Ansible to run the "Reboot Host" handler at the end of the play

      when: "latest_package_name not in current_version_info.stdout"
      # This condition is the key to idempotency. The block is skipped if the latest version is already installed.

    - name: Clean up the downloaded .deb file
      ansible.builtin.file:
        path: "{{ download_path }}/{{ latest_package_name }}"
        state: absent
      when: "latest_package_name not in current_version_info.stdout" # Only clean up if we downloaded it

  # --- This handler is only triggered by the 'notify' keyword ---
  handlers:
    - name: Reboot Host
      listen: "Reboot Host"
      ansible.builtin.reboot:
        msg: "Rebooting to apply microcode update..."
        reboot_timeout: 300 # 5 minutes
